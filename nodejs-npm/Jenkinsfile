pipeline {
    agent { label 'mac-sh' }

    stages {
        stage("Build") {
            steps {
                script {
                    echo "JOB_NAME: ${env.JOB_NAME}"

                    dir('nodejs-npm') {
                        sh 'node --version'
                        sh 'npm --version'
                        sh 'npm install'
                    }
                }
            }
        }

        stage("blackduck-security-scan") {
            steps {
                script {
                    dir('nodejs-npm') {
                        def projectName = env.JOB_NAME.split('/')[0]
                        echo "DETECT_PROJECT_NAME will be set to: ${projectName}"

                        withEnv(["DETECT_PROJECT_NAME=${projectName}"]) {
                            security_scan blackducksca_scan_full: true, 
                                         blackducksca_waitForScan: true, 
                                         include_diagnostics: true, 
                                         mark_build_status: 'FAILURE', 
                                         product: 'blackducksca'
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                saveLogsToGitHub('nodejs-npm')
            }
        }
    }
}

def saveLogsToGitHub(String projectType) {
    echo "üîÑ Starting log capture for ${projectType}..."

    def timestamp = new Date().format('yyyy-MM-dd-HH-mm-ss')
    def buildNum = env.BUILD_NUMBER
    def logFileName = "${projectType}-${timestamp}-${buildNum}.txt"

    echo "üìù Would create log file: ${logFileName}"
    echo "‚úÖ Log capture function works!"
}

// @Library('file:///Users/madhusud/.jenkins/workflow-libs/blackduck-shared-library') _

// pipeline {

//     agent{
//         label 'mac-sh'
//     }

//    stages {
        
//        stage("Build") {
//             when {
//                 anyOf {
//                     branch 'main'
//                     branch pattern: "PR-\\d+", comparator: "REGEXP"
//                 }
//             }
//             steps {
//                 script {

//                     // Print environment variables for debugging
//                     echo "JOB_NAME: ${env.JOB_NAME}"
//                     echo "JOB_BASE_NAME: ${env.JOB_BASE_NAME}"
//                     echo "BRANCH_NAME: ${env.BRANCH_NAME}"
//                     echo "GIT_URL: ${env.GIT_URL}"
                    
//                     dir('nodejs-npm') {
//                         sh 'node --version'
//                         sh 'npm --version'
//                         sh 'npm install'
                        
//                     }
//                 }
//             }
//         }

        

//         stage("blackduck-security-scan") {
//                 steps {
//                     script {
//                         dir('nodejs-npm') {
//                             // Extract repository name from JOB_NAME
//                             def projectName = env.JOB_NAME.split('/')[0]
//                             echo "DETECT_PROJECT_NAME will be set to: ${projectName}"
    
//                             withEnv(["DETECT_PROJECT_NAME=${projectName}"]) {
//                                 security_scan blackducksca_scan_full: true, 
//                                              blackducksca_waitForScan: true, 
//                                              include_diagnostics: true, 
//                                              mark_build_status: 'FAILURE', 
//                                              product: 'blackducksca'
//                             }
//                         }
//                     }
//                 }
//         }

       
//     }

//     post {
//         always {
//             script {
//                 saveLogsToGitHub('nodejs-npm')
//             }
//         }
//     }

    
// }


