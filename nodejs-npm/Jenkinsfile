pipeline {
    agent { label 'mac-sh' }

    stages {
        stage("Test HTTP Request") {
            steps {
                script {
                    try {
                        echo "üîç Testing HTTP request capability..."

                        // Get console URL
                        def consoleUrl = "${env.BUILD_URL}consoleText"
                        echo "Console URL: ${consoleUrl}"

                        // Test if httpRequest step is available
                        echo "Testing httpRequest step availability..."

                        // Simple HTTP test (this will tell us if httpRequest works)
                        def response = httpRequest url: consoleUrl

                        echo "‚úÖ HTTP request successful!"
                        echo "Response status: ${response.status}"
                        echo "Response content length: ${response.content.length()}"
                        echo "First 200 characters: ${response.content.substring(0, Math.min(200, response.content.length()))}"

                    } catch (Exception e) {
                        echo "‚ùå HTTP request failed: ${e.message}"
                        echo "Error class: ${e.class.name}"
                    }
                }
            }
        }
    }
}

// @Library('file:///Users/madhusud/.jenkins/workflow-libs/blackduck-shared-library') _

// pipeline {

//     agent{
//         label 'mac-sh'
//     }

//    stages {
        
//        stage("Build") {
//             when {
//                 anyOf {
//                     branch 'main'
//                     branch pattern: "PR-\\d+", comparator: "REGEXP"
//                 }
//             }
//             steps {
//                 script {

//                     // Print environment variables for debugging
//                     echo "JOB_NAME: ${env.JOB_NAME}"
//                     echo "JOB_BASE_NAME: ${env.JOB_BASE_NAME}"
//                     echo "BRANCH_NAME: ${env.BRANCH_NAME}"
//                     echo "GIT_URL: ${env.GIT_URL}"
                    
//                     dir('nodejs-npm') {
//                         sh 'node --version'
//                         sh 'npm --version'
//                         sh 'npm install'
                        
//                     }
//                 }
//             }
//         }

        

//         stage("blackduck-security-scan") {
//                 steps {
//                     script {
//                         dir('nodejs-npm') {
//                             // Extract repository name from JOB_NAME
//                             def projectName = env.JOB_NAME.split('/')[0]
//                             echo "DETECT_PROJECT_NAME will be set to: ${projectName}"
    
//                             withEnv(["DETECT_PROJECT_NAME=${projectName}"]) {
//                                 security_scan blackducksca_scan_full: true, 
//                                              blackducksca_waitForScan: true, 
//                                              include_diagnostics: true, 
//                                              mark_build_status: 'FAILURE', 
//                                              product: 'blackducksca'
//                             }
//                         }
//                     }
//                 }
//         }

       
//     }

//     post {
//         always {
//             script {
//                 saveLogsToGitHub('nodejs-npm')
//             }
//         }
//     }

    
// }


